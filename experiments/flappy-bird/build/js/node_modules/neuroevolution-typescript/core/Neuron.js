"use strict";
/**
* @author       Eric Kuhn <digit.sensitivee@gmail.com>
* @copyright    2017 Eric Kuhn
* @license      Eric Kuhn
*/
Object.defineProperty(exports, "__esModule", { value: true });
var Neuron = (function () {
    function Neuron() {
        /* init parameters */
        this.value = 0;
        this.weights = [];
    }
    Neuron.prototype.getValue = function () { return this.value; };
    Neuron.prototype.getWeights = function () { return this.weights; };
    Neuron.prototype.setValue = function (v) { this.value = v; };
    /**
     * Initialize number of neuron weights to random clamped values
     * @param {number} nb Number of neuron weights (number of inputs).
     */
    Neuron.prototype.populate = function (nb) {
        this.weights = [];
        for (var i = 0; i < nb; i++) {
            this.weights.push(this.randomClamped());
        }
    };
    /**
     * Returns a random value between -1 and 1
     * @return {number} [Random Value]
     */
    Neuron.prototype.randomClamped = function () {
        return Math.random() * 2 - 1;
    };
    return Neuron;
}());
exports.Neuron = Neuron;
